hn_list = [3 4 6 7];

peri_color = [236 102 138] ./ 255;
sync_color = [0 177 238] ./ 255;

% colors in this order:
hn_colors = {...
  [], [], [38 36 123] ./ 255, ...
  [0 140 68] ./ 255, ...
  [245 130 32] ./ 255, ...
  [196 0 115] ./ 255, ...
  [0 146 200] ./ 255 };

input_names = ...
      {'5_19A', '5_19B', '5_20B', '5_22B', '5_26A', '5_27B'};

% input colors
color_input5_19A = [28 66 29]./255;
color_input5_19B = [191 214 48]./255;
color_input5_20B = [14 129 64]./255;
color_input5_22B = [224 226 19]./255;
color_input5_26A = [76 182 71]./255;
color_input5_27B = [243 235 26]./255;

input_colors = { color_input5_19A, color_input5_19B, color_input5_20B, ...
                 color_input5_22B, color_input5_26A, color_input5_27B};

% Mike's markers
input_markers = { 'o', '<', 's', 'd', '>', 'h' };

% sort by maximal absolute error
sort_MAE = @(a_db)...
    sortrows(addColumns(a_db, 'Max', ...
                        get(max(abs(delColumns(a_db, {'Distance', 'RowIndex'})), 2), ...
                            'data')), 'Max');

% add MPP metrics, make them funcs
add_MPP = @(a_db)...
          addColumns(a_db, {'pMPP', 'sMPP'}, ...
                     [a_db(:, 'peri_phase_median_HE8', :).data - ...
                    a_db(:, 'peri_phase_median_HE12', :).data, ...
                    a_db(:, 'sync_phase_median_HE8', :).data - ...
                    a_db(:, 'sync_phase_median_HE12', :).data]);
